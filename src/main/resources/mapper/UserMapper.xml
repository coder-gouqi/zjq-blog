<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cuit.zjq.mapper.UserMapper">

    <resultMap id="BaseResultMap" type="com.cuit.zjq.model.domain.User">
            <id property="id" column="id" jdbcType="VARCHAR"/>
            <result property="userAccount" column="user_account" jdbcType="VARCHAR"/>
            <result property="userPassword" column="user_password" jdbcType="VARCHAR"/>
            <result property="userRole" column="user_role" jdbcType="VARCHAR"/>
            <result property="email" column="email" jdbcType="VARCHAR"/>
            <result property="phone" column="phone" jdbcType="VARCHAR"/>
            <result property="hobby" column="hobby" jdbcType="VARCHAR"/>
            <result property="isDelete" column="is_delete" jdbcType="TINYINT"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,user_account,user_password,
        user_role,email,phone,
        hobby,is_delete
    </sql>
    <insert id="insert" parameterType="object">
        insert into user (id, user_account, user_password, user_role, email, phone, hobby, is_delete)
        values (#{id}, #{userAccount}, #{userPassword}, #{userRole}, #{email}, #{phone}, #{hobby}, #{isDelete})
    </insert>

    <select id="select" resultType="com.cuit.zjq.model.domain.User">
        select *
        from user
        where is_delete=0
    </select>

    <select id="selectById" resultType="com.cuit.zjq.model.domain.User">
        select *
        from user
        where is_delete = 0
          and id = #{id}
    </select>

    <update id="updateById">
        update user
        set user_password = #{userPassword},
            email         = #{email},
            phone         = #{phone},
            hobby         = #{hobby}
        where id = #{id}
    </update>

    <delete id="deleteById" parameterType="object">
        update user
        set is_delete = 1
        where id = #{id}
    </delete>

</mapper>
